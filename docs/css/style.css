body{-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-smoothing:antialiased;text-rendering:auto;font-size:14px;font-family:Anton,sans-serif;color:#333;background-color:#fff}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}.l-container{padding:0 35px;max-width:610px;width:100%;margin:0 auto}.landing{height:100vh}@media screen and (min-width:768px){.landing{padding:60px 0}}.landing-inner{height:100%;padding-top:35px;padding-bottom:35px;background-image:url(../images/background/mobile-bg.png);background-position:center;background-size:107%}@media screen and (min-width:768px){.landing-inner{background-size:cover}}.landing-logo img{width:178px;display:block;margin:0 auto}.landing-description{color:#fff;text-align:center;font-size:24px;line-height:1.4;letter-spacing:1.18px;margin-top:20px}.landing-score{margin:20px 0}.landing-score img{width:268px;display:block;margin:0 auto}.landing-steps-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff}.landing-steps-item img{width:60px}.landing-steps-item span{font-family:Montserrat,sans-serif;letter-spacing:.78px;display:block;width:calc(100% - 40px);padding-left:15px;text-shadow:0 5px 10px rgba(0,0,0,.8);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;top:-3px}.landing-steps-item span i{font-size:24px;display:inline-block;vertical-align:middle;margin:0 10px}.landing-note{font-family:Montserrat,sans-serif;color:#fff;font-size:12px;line-height:24px;letter-spacing:.59px;display:inline-block;margin-top:10px}.landing-button{width:100%;display:block;text-align:center}.landing-button a{display:inline-block}.landing-button img{width:230px;-webkit-filter:drop-shadow(0 5px 10px rgba(0, 0, 0, .8));filter:drop-shadow(0 5px 10px rgba(0, 0, 0, .8))}.landing-terms{font-size:12px;font-family:Montserrat,sans-serif;color:#fff;letter-spacing:.59px;line-height:24px;text-align:center;display:block;text-decoration:none;margin-top:10px}@media screen and (max-width:768px){.u-sp-hidden{display:none}}@media screen and (max-width:1180px){.u-tablet-hidden{display:none}}@media screen and (min-width:768px){.u-pc-hidden{display:none}}@media screen and (min-width:1180px){.u-pc-tablet-hidden{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
